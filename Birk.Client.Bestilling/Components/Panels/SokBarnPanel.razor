@using Birk.Client.Bestilling.Components.Enums;
@using Birk.Client.Bestilling.Components.Reusable
@using Birk.Client.Bestilling.Enums;
@using Birk.Client.Bestilling.Models.ViewModels;
@using Birk.Client.Bestilling.Services.Interfaces;
@using Birk.Client.Bestilling.Utils.Constants;
@using System.Text.RegularExpressions;
@using Birk.Client.Bestilling.Utils.Helpers;
@using Birk.Client.Bestilling.Utils.Validator;
@inject IBarnService BarnService

<div>
    @if (_showNewSøkButton)
    {
        @*Cyril 04.05: midlertidig css for workflow testing, Heidi har ikke laget GUI ennå*@        
        <div style="padding-top:3rem">
            <GenericComponent GuiType=GuiType.Button Content="NewSøkBarnButton" OnClick=HandleNewSøkBarnButtonClick CssExtra="søk-barn" />
        </div>
    }
    else
    {
        <GenericComponent GuiType=GuiType.Title Content="SøkBarnTitle" />
        <GenericComponent GuiType=GuiType.Label Content="SøkBarnLabel" />
        <div class="buf-row">
            <GenericComponent GuiType=GuiType.Input Placeholder="Fødselsnummer" MaxLength=11 ValueChanged=HandleFnrChanged CssExtra="søk-barn" @ref=_fnrInput />
            <GenericComponent GuiType=GuiType.Button Content="SøkBarnButton" OnClick=HandleSøkBarnButtonClick Disabled=@_isFnrGyldig CssExtra="søk-barn" />
            @foreach (KeyValuePair<string, bool> warning in _warnings)
            {
                if (warning.Value)
                {
                    <GenericComponent GuiType=GuiType.Label Content=@($"WarningSize8|{warning.Key}") CssExtra="warning" />
                }
            }
        </div>
    }
    
</div>


@code {
    [Parameter]
    public EventCallback<BarnViewModel> OnBarnUpdated { get; set; }

    [Parameter]
    public BarnViewModel Barn { get; set; }

    private GenericComponent _fnrInput;

    private Dictionary<string, bool> _warnings = new();

    private string _fnr = "";
    private bool _isFnrGyldig => _warnings.Any(w => w.Value == true);
    private bool _showNewSøkButton = false;

    protected override void OnInitialized()
    {
        InitializeWarnings();
    }

    private void InitializeWarnings()
    {
        _warnings.Add("FnrNotNumericValue", false);
        _warnings.Add("FnrNot11DigitsWarning", false);
        _warnings.Add("FnrNotValid", false);
        _warnings.Add("PersonNotFoundWarning", false);
    }

    private void HandleFnrChanged(string fnr)
    {
        bool isFnrInputNotValid = false;
        _warnings["FnrNotNumericValue"] = false;
        _warnings["FnrNot11DigitsWarning"] = false;
        _warnings["FnrNotValid"] = false;

        if (!FødselsnummerValidator.IsNumeric(fnr))
        {
            _warnings["FnrNotNumericValue"] = true;
            isFnrInputNotValid = true;
        }
        else if (!FødselsnummerValidator.Is11Digits(fnr))
        {
            _warnings["FnrNot11DigitsWarning"] = true;
            isFnrInputNotValid = true;
        }
        else if (!FødselsnummerValidator.IsValid(fnr))
        {
            _warnings["FnrNotValid"] = true;
            isFnrInputNotValid = true;
        }

        Barn.Fødselsnummer = isFnrInputNotValid ? "" : fnr;
        Barn.Født = isFnrInputNotValid ? null : StringHelper.ConvertFnrToFødt(Barn.Fødselsnummer);

        OnBarnUpdated.InvokeAsync(Barn);
    }

    private async Task HandleSøkBarnButtonClick()
    {
        var barn = await BarnService.GetBarnByFnr(Barn.Fødselsnummer);
        if (barn != null)
        {
            Barn = barn;
            Barn.SøkStatus = SøkStatus.Finnes;
        }
        else
        {
            Barn.SøkStatus = SøkStatus.FinnesIkke;
            _warnings["PersonNotFoundWarning"] = true;
        }
        
        _showNewSøkButton = true;

        OnBarnUpdated.InvokeAsync(Barn);
    }

    private async Task HandleNewSøkBarnButtonClick()
    {
        Barn = new BarnViewModel();

        _warnings["PersonNotFoundWarning"] = false;
        _showNewSøkButton = false;

        OnBarnUpdated.InvokeAsync(Barn);
    }
}
