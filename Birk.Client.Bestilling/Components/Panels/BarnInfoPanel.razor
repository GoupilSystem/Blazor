@using Birk.Client.Bestilling.Components.Enums;
@using Birk.Client.Bestilling.Components.Reusable

@using Birk.Client.Bestilling.Models.ViewModels;
@using Birk.Client.Bestilling.Utils.Constants;
@using Birk.Client.Bestilling.Utils.Helpers;
@using System.Text.RegularExpressions;

<div>
    <GenericComponent GuiType=GuiType.Title Content="BarnInfoTitle" />

    <GenericComponent GuiType=GuiType.Label Content="Fornavn|RedStarTopSize8" />
    <GenericComponent GuiType=GuiType.Input InputValue=@Barn.Fornavn Placeholder="Fornavn"
                      MaxLength=100 ValueChanged=HandleFornavnChanged Disabled=@Barn.ExistsInBirk @ref=_fornavnInput />

    <GenericComponent GuiType=GuiType.Label Content="Etternavn|RedStarTopSize8" />
    <GenericComponent GuiType=GuiType.Input InputValue=@Barn.Etternavn Placeholder="Etternavn"
                      MaxLength=100 ValueChanged=HandleEtternavnChanged Disabled=@Barn.ExistsInBirk @ref=_etternavnInput />

    <GenericComponent GuiType=GuiType.Label Content="Fødselsnummer" />

    <div class="buf-row">
        <GenericComponent GuiType=GuiType.Input InputValue=@Barn.Fødselsnummer Placeholder="Fødselsnummer"
                          MaxLength=11 ValueChanged=HandleFnrChanged Disabled=@Barn.ExistsInBirk @ref=_fnrInput />
        <GenericComponent GuiType=GuiType.CheckBox Content="UsikkertFnr" OnCheck=Check />
    </div>

    @foreach (KeyValuePair<string, bool> warning in _warnings)
    {
        if (warning.Value)
        {
            <GenericComponent GuiType=GuiType.Label Content=@($"WarningSize8|{warning.Key}") CssExtra="warning" />
        }
    }

    <GenericComponent GuiType=GuiType.Label Content="BirkIdLabel" />
    <GenericComponent GuiType=GuiType.Input InputValue=@Barn.BirkId Placeholder="BirkId" Disabled=true @ref=_birkIdInput />

    <GenericComponent GuiType=GuiType.Label Content="Sikkerhetsnivå" />
    <div class="buf-row" id="sikkerhetsnivå-container">
        <div>
            <DropdownComponent GuiType=GuiType.Dropdown Items=_sikkerhetsnivåTypes OnSelectionChanged=OnSikkerhetsnivåChanged />
        </div>
        <div class="info-icon-container">
            <i class="fas fa-info-circle info size12" @onclick="() => { ShowHelp = !ShowHelp; }" />
            @if (ShowHelp)
            {
                <div class="help-text-container">
                    <div class="help-text">
                        @(new MarkupString(Language.NO["InfoText"]))
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<BarnViewModel> OnBarnUpdated { get; set; }

    [Parameter]
    public BarnViewModel Barn { get; set; }

    private GenericComponent _fornavnInput;
    private GenericComponent _etternavnInput;
    private GenericComponent _fnrInput;
    private GenericComponent _birkIdInput;

    private string[] _sikkerhetsnivåTypes = Language.NO["SikkerhetnivåTypes"].Split("|");

    private bool ShowHelp { get; set; }

    private Dictionary<string, bool> _warnings = new();

    private string _fnr = "";

    protected override void OnInitialized()
    {
        InitializeWarnings();
    }

    private void InitializeWarnings()
    {
        _warnings.Add("FnrNotNumericValue", false);
        _warnings.Add("FnrNot11DigitsWarning", false);
    }

    private void HandleFornavnChanged(string value)
    {
        // 17/04: coming code in the next US
    }

    private void HandleEtternavnChanged(string value)
    {
        // 17/04: coming code in the next US
    }

    private void HandleFnrChanged(string fnr)
    {
        _fnr = fnr;

        _warnings["FnrNotNumericValue"] = !string.IsNullOrEmpty(_fnr) && !Regex.IsMatch(_fnr, "^[0-9]*$");
        if (!_warnings["FnrNotNumericValue"])
        {
            _warnings["FnrNot11DigitsWarning"] = !Regex.IsMatch(_fnr, "^[0-9]{11}$");
        }

        Barn.Fødselsnummer = !_warnings["FnrNotNumericValue"] && !_warnings["FnrNot11DigitsWarning"] ? _fnr : null;

        Barn.Født = StringHelper.ConvertFnrToFødt(Barn.Fødselsnummer);

        OnBarnUpdated.InvokeAsync(Barn);
    }

    private void HandleBirkIdChanged(string value)
    {
        // 17/04: coming code in the next US
    }

    private void Check(bool value)
    {
        // 17/04: coming code in the next US
    }

    private async Task OnSikkerhetsnivåChanged(string selectedSikkerhetsnivåType)
    {
        // 17/04: coming code in the next US
    }
}
