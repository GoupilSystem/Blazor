@inherits BaseComponent;

<MudAutocomplete Class=@CssClass T="string"
                 @bind-Value="SelectedBestilling" MaxItems="null" SearchFunc="@Search"
                 ResetValueOnEmptyText="@_resetValueOnEmptyText"
                 CoerceText="@_coerceText" CoerceValue="@_coerceValue" />

@code {

    [Parameter]
    public Func<string, Task> OnSelectionChanged { get; set; }

    [Parameter]
    public string SelectedBestilling
    {
        get => _selectedBestilling;
        set
        {
           if (value == _selectedBestilling)
            {
                return;
            }

            _selectedBestilling = value;
            OnSelectionChanged?.Invoke(_selectedBestilling);
        }
    }

    private string _selectedBestilling;
    private bool _resetValueOnEmptyText = false;
    private bool _coerceText = false;
    private bool _coerceValue = false;

    private async Task<IEnumerable<string>> Search(string value)
    {
        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value) || _selectedBestilling == value)
        {
            return Items;
        }

        return Items.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    public void SetSelected(int? selectedItemIndex = null)
    {
        if (selectedItemIndex == null)
        { 
            SelectedBestilling = Items.Length > 1 ? null : Items[0]; 
        }
        else
        {
            SelectedBestilling = Items[selectedItemIndex ?? 0];
        }
    }
}